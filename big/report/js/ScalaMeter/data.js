var ScalaMeter = (function(parent) {
  var my = { name: "data" };
  my.index = [{"scope" : ["Optimized[List]", "reduce"], "name" : "Sequential", "file" : "..\/Optimized[List].reduce.Sequential.dsv"}, {"scope" : ["Optimized[List]", "reduce"], "name" : "Optimized", "file" : "..\/Optimized[List].reduce.Optimized.dsv"}, {"scope" : ["Optimized[List]", "aggregate"], "name" : "Sequential", "file" : "..\/Optimized[List].aggregate.Sequential.dsv"}, {"scope" : ["Optimized[List]", "aggregate"], "name" : "Optimized", "file" : "..\/Optimized[List].aggregate.Optimized.dsv"}, {"scope" : ["Optimized[List]", "derivative", "sum"], "name" : "Sequential", "file" : "..\/Optimized[List].derivative.sum.Sequential.dsv"}, {"scope" : ["Optimized[List]", "derivative", "sum"], "name" : "Optimized", "file" : "..\/Optimized[List].derivative.sum.Optimized.dsv"}, {"scope" : ["Optimized[List]", "derivative", "product"], "name" : "Sequential", "file" : "..\/Optimized[List].derivative.product.Sequential.dsv"}, {"scope" : ["Optimized[List]", "derivative", "product"], "name" : "Optimized", "file" : "..\/Optimized[List].derivative.product.Optimized.dsv"}, {"scope" : ["Optimized[List]", "derivative", "min"], "name" : "Sequential", "file" : "..\/Optimized[List].derivative.min.Sequential.dsv"}, {"scope" : ["Optimized[List]", "derivative", "min"], "name" : "Optimized", "file" : "..\/Optimized[List].derivative.min.Optimized.dsv"}, {"scope" : ["Optimized[List]", "derivative", "max"], "name" : "Sequential", "file" : "..\/Optimized[List].derivative.max.Sequential.dsv"}, {"scope" : ["Optimized[List]", "derivative", "max"], "name" : "Optimized", "file" : "..\/Optimized[List].derivative.max.Optimized.dsv"}, {"scope" : ["Conc", "append-element"], "name" : "List", "file" : "..\/Conc.append-element.List.dsv"}, {"scope" : ["Conc", "append-element"], "name" : "Vector", "file" : "..\/Conc.append-element.Vector.dsv"}, {"scope" : ["Conc", "append-element"], "name" : "Conc", "file" : "..\/Conc.append-element.Conc.dsv"}, {"scope" : ["Conc", "Buffer"], "name" : "VectorBuffer", "file" : "..\/Conc.Buffer.VectorBuffer.dsv"}, {"scope" : ["Conc", "Buffer"], "name" : "ArrayBuffer", "file" : "..\/Conc.Buffer.ArrayBuffer.dsv"}, {"scope" : ["Conc", "Buffer"], "name" : "Conc.Buffer", "file" : "..\/Conc.Buffer.Conc.Buffer.dsv"}, {"scope" : ["Conc", "merge"], "name" : "Conc", "file" : "..\/Conc.merge.Conc.dsv"}, {"scope" : ["Conc", "append-normalize-merge"], "name" : "Conc", "file" : "..\/Conc.append-normalize-merge.Conc.dsv"}, {"scope" : ["Conc", "Kernel", "Buffer"], "name" : "Kernel", "file" : "..\/Conc.Kernel.Buffer.Kernel.dsv"}, {"scope" : ["Conc", "Kernel", "Buffer"], "name" : "Stealer", "file" : "..\/Conc.Kernel.Buffer.Stealer.dsv"}, {"scope" : ["Conc", "Kernel", "Buffer"], "name" : "Seq", "file" : "..\/Conc.Kernel.Buffer.Seq.dsv"}, {"scope" : ["Conc", "Kernel", "Append"], "name" : "Kernel", "file" : "..\/Conc.Kernel.Append.Kernel.dsv"}, {"scope" : ["Conc", "Kernel", "Append"], "name" : "Stealer", "file" : "..\/Conc.Kernel.Append.Stealer.dsv"}, {"scope" : ["Conc", "Kernel", "Append"], "name" : "Seq", "file" : "..\/Conc.Kernel.Append.Seq.dsv"}, {"scope" : ["Conc", "memory"], "name" : "List", "file" : "..\/Conc.memory.List.dsv"}, {"scope" : ["Conc", "memory"], "name" : "Vector", "file" : "..\/Conc.memory.Vector.dsv"}, {"scope" : ["Conc", "memory"], "name" : "Conc", "file" : "..\/Conc.memory.Conc.dsv"}, {"scope" : ["Conc", "memory"], "name" : "Buffer", "file" : "..\/Conc.memory.Buffer.dsv"}, {"scope" : ["Par[Range]", "reduce"], "name" : "Sequential", "file" : "..\/Par[Range].reduce.Sequential.dsv"}, {"scope" : ["Par[Range]", "reduce"], "name" : "Par", "file" : "..\/Par[Range].reduce.Par.dsv"}, {"scope" : ["Par[Range]", "reduce", "old"], "name" : "pc", "file" : "..\/Par[Range].reduce.old.pc.dsv"}, {"scope" : ["Par[Range]", "mapReduce"], "name" : "Sequential", "file" : "..\/Par[Range].mapReduce.Sequential.dsv"}, {"scope" : ["Par[Range]", "mapReduce"], "name" : "Par", "file" : "..\/Par[Range].mapReduce.Par.dsv"}, {"scope" : ["Par[Range]", "mapReduce"], "name" : "ParNotFused", "file" : "..\/Par[Range].mapReduce.ParNotFused.dsv"}, {"scope" : ["Par[Range]", "reduce(step)"], "name" : "Sequential", "file" : "..\/Par[Range].reduce(step).Sequential.dsv"}, {"scope" : ["Par[Range]", "reduce(step)"], "name" : "Par", "file" : "..\/Par[Range].reduce(step).Par.dsv"}, {"scope" : ["Par[Range]", "reduce(sqrt)"], "name" : "Sequential", "file" : "..\/Par[Range].reduce(sqrt).Sequential.dsv"}, {"scope" : ["Par[Range]", "reduce(sqrt)"], "name" : "Par", "file" : "..\/Par[Range].reduce(sqrt).Par.dsv"}, {"scope" : ["Par[Range]", "reduce(exp)"], "name" : "Sequential", "file" : "..\/Par[Range].reduce(exp).Sequential.dsv"}, {"scope" : ["Par[Range]", "reduce(exp)"], "name" : "Par", "file" : "..\/Par[Range].reduce(exp).Par.dsv"}, {"scope" : ["Par[Range]", "for3Generators"], "name" : "Sequential", "file" : "..\/Par[Range].for3Generators.Sequential.dsv"}, {"scope" : ["Par[Range]", "for3Generators"], "name" : "Par-non-fused", "file" : "..\/Par[Range].for3Generators.Par-non-fused.dsv"}, {"scope" : ["Par[Range]", "for3Generators"], "name" : "Par", "file" : "..\/Par[Range].for3Generators.Par.dsv"}, {"scope" : ["Par[Range]", "aggregate"], "name" : "Sequential", "file" : "..\/Par[Range].aggregate.Sequential.dsv"}, {"scope" : ["Par[Range]", "aggregate"], "name" : "Par", "file" : "..\/Par[Range].aggregate.Par.dsv"}, {"scope" : ["Par[Range]", "aggregate", "old"], "name" : "pc", "file" : "..\/Par[Range].aggregate.old.pc.dsv"}, {"scope" : ["Par[Range]", "groupAggregate"], "name" : "Sequential", "file" : "..\/Par[Range].groupAggregate.Sequential.dsv"}, {"scope" : ["Par[Range]", "groupAggregate"], "name" : "Par", "file" : "..\/Par[Range].groupAggregate.Par.dsv"}, {"scope" : ["Par[Range]", "find"], "name" : "Sequential", "file" : "..\/Par[Range].find.Sequential.dsv"}, {"scope" : ["Par[Range]", "find"], "name" : "Par", "file" : "..\/Par[Range].find.Par.dsv"}, {"scope" : ["Par[Range]", "copyToArray"], "name" : "Sequential", "file" : "..\/Par[Range].copyToArray.Sequential.dsv"}, {"scope" : ["Par[Range]", "copyToArray"], "name" : "Par", "file" : "..\/Par[Range].copyToArray.Par.dsv"}, {"scope" : ["Par[Range]", "map(sqrt)"], "name" : "Sequential", "file" : "..\/Par[Range].map(sqrt).Sequential.dsv"}, {"scope" : ["Par[Range]", "map(sqrt)"], "name" : "Par", "file" : "..\/Par[Range].map(sqrt).Par.dsv"}, {"scope" : ["Par[Range]", "flatMap"], "name" : "Sequential", "file" : "..\/Par[Range].flatMap.Sequential.dsv"}, {"scope" : ["Par[Range]", "flatMap"], "name" : "Par", "file" : "..\/Par[Range].flatMap.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "fold"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.fold.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "fold"], "name" : "Par", "file" : "..\/Par[Range].derivative.fold.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "filter(mod3)"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.filter(mod3).Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "filter(mod3)"], "name" : "Par", "file" : "..\/Par[Range].derivative.filter(mod3).Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "filter(cos)"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.filter(cos).Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "filter(cos)"], "name" : "Par", "file" : "..\/Par[Range].derivative.filter(cos).Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "foreach"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.foreach.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "foreach"], "name" : "Par", "file" : "..\/Par[Range].derivative.foreach.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "min"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.min.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "min"], "name" : "Par", "file" : "..\/Par[Range].derivative.min.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "max"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.max.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "max"], "name" : "Par", "file" : "..\/Par[Range].derivative.max.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "sum"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.sum.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "sum"], "name" : "Par", "file" : "..\/Par[Range].derivative.sum.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "product"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.product.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "product"], "name" : "Par", "file" : "..\/Par[Range].derivative.product.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "count"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.count.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "count"], "name" : "Par", "file" : "..\/Par[Range].derivative.count.Par.dsv"}, {"scope" : ["Par[Range]", "derivative", "exists"], "name" : "Sequential", "file" : "..\/Par[Range].derivative.exists.Sequential.dsv"}, {"scope" : ["Par[Range]", "derivative", "exists"], "name" : "Par", "file" : "..\/Par[Range].derivative.exists.Par.dsv"}, {"scope" : ["Par[Conc]", "reduce"], "name" : "Array", "file" : "..\/Par[Conc].reduce.Array.dsv"}, {"scope" : ["Par[Conc]", "reduce"], "name" : "Conc", "file" : "..\/Par[Conc].reduce.Conc.dsv"}, {"scope" : ["Par[Conc]", "reduce"], "name" : "Conc.Buffer", "file" : "..\/Par[Conc].reduce.Conc.Buffer.dsv"}, {"scope" : ["Par[Conc]", "copyToArray"], "name" : "Array", "file" : "..\/Par[Conc].copyToArray.Array.dsv"}, {"scope" : ["Par[Conc]", "copyToArray"], "name" : "Conc.Buffer", "file" : "..\/Par[Conc].copyToArray.Conc.Buffer.dsv"}, {"scope" : ["Par[Array]", "NonContendedVolatileReads"], "name" : "nonVolatile", "file" : "..\/Par[Array].NonContendedVolatileReads.nonVolatile.dsv"}, {"scope" : ["Par[Array]", "Boxing"], "name" : "Sequential", "file" : "..\/Par[Array].Boxing.Sequential.dsv"}, {"scope" : ["Par[Array]", "Boxing"], "name" : "SequentialBoxedOp", "file" : "..\/Par[Array].Boxing.SequentialBoxedOp.dsv"}, {"scope" : ["Par[Array]", "Boxing"], "name" : "SequentialSpecialized", "file" : "..\/Par[Array].Boxing.SequentialSpecialized.dsv"}, {"scope" : ["Par[Array]", "Boxing"], "name" : "SequentialBoxedOpBoxedData", "file" : "..\/Par[Array].Boxing.SequentialBoxedOpBoxedData.dsv"}, {"scope" : ["Par[Array]", "Dispatch"], "name" : "Dynamic", "file" : "..\/Par[Array].Dispatch.Dynamic.dsv"}, {"scope" : ["Par[Array]", "Dispatch"], "name" : "Static", "file" : "..\/Par[Array].Dispatch.Static.dsv"}, {"scope" : ["Par[Array]", "reduce"], "name" : "Sequential", "file" : "..\/Par[Array].reduce.Sequential.dsv"}, {"scope" : ["Par[Array]", "reduce"], "name" : "Par", "file" : "..\/Par[Array].reduce.Par.dsv"}, {"scope" : ["Par[Array]", "reduce", "old"], "name" : "ParArray", "file" : "..\/Par[Array].reduce.old.ParArray.dsv"}, {"scope" : ["Par[Array]", "mapReduce"], "name" : "Sequential", "file" : "..\/Par[Array].mapReduce.Sequential.dsv"}, {"scope" : ["Par[Array]", "mapReduce"], "name" : "Par", "file" : "..\/Par[Array].mapReduce.Par.dsv"}, {"scope" : ["Par[Array]", "aggregate"], "name" : "Sequential", "file" : "..\/Par[Array].aggregate.Sequential.dsv"}, {"scope" : ["Par[Array]", "aggregate"], "name" : "Par", "file" : "..\/Par[Array].aggregate.Par.dsv"}, {"scope" : ["Par[Array]", "find(sin)"], "name" : "Sequential", "file" : "..\/Par[Array].find(sin).Sequential.dsv"}, {"scope" : ["Par[Array]", "find(sin)"], "name" : "Par", "file" : "..\/Par[Array].find(sin).Par.dsv"}, {"scope" : ["Par[Array]", "map(sqrt)"], "name" : "Sequential", "file" : "..\/Par[Array].map(sqrt).Sequential.dsv"}, {"scope" : ["Par[Array]", "map(sqrt)"], "name" : "Par", "file" : "..\/Par[Array].map(sqrt).Par.dsv"}, {"scope" : ["Par[Array]", "filter(mod3)"], "name" : "Sequential", "file" : "..\/Par[Array].filter(mod3).Sequential.dsv"}, {"scope" : ["Par[Array]", "filter(mod3)"], "name" : "Par", "file" : "..\/Par[Array].filter(mod3).Par.dsv"}, {"scope" : ["Par[Array]", "filter(mod3)", "old"], "name" : "ParArray", "file" : "..\/Par[Array].filter(mod3).old.ParArray.dsv"}, {"scope" : ["Par[Array]", "filter(cos)"], "name" : "Sequential", "file" : "..\/Par[Array].filter(cos).Sequential.dsv"}, {"scope" : ["Par[Array]", "filter(cos)"], "name" : "Par", "file" : "..\/Par[Array].filter(cos).Par.dsv"}, {"scope" : ["Par[Array]", "flatMap"], "name" : "Sequential", "file" : "..\/Par[Array].flatMap.Sequential.dsv"}, {"scope" : ["Par[Array]", "flatMap"], "name" : "Par", "file" : "..\/Par[Array].flatMap.Par.dsv"}, {"scope" : ["Par[Array]", "derivative", "fold(product)"], "name" : "Sequential", "file" : "..\/Par[Array].derivative.fold(product).Sequential.dsv"}, {"scope" : ["Par[Array]", "derivative", "fold(product)"], "name" : "Par", "file" : "..\/Par[Array].derivative.fold(product).Par.dsv"}, {"scope" : ["Par[Array]", "derivative", "foreach"], "name" : "Sequential", "file" : "..\/Par[Array].derivative.foreach.Sequential.dsv"}, {"scope" : ["Par[Array]", "derivative", "foreach"], "name" : "Par", "file" : "..\/Par[Array].derivative.foreach.Par.dsv"}, {"scope" : ["Par[Array]", "derivative", "sum"], "name" : "Sequential", "file" : "..\/Par[Array].derivative.sum.Sequential.dsv"}, {"scope" : ["Par[Array]", "derivative", "sum"], "name" : "Par", "file" : "..\/Par[Array].derivative.sum.Par.dsv"}, {"scope" : ["Par[Array]", "derivative", "product"], "name" : "Sequential", "file" : "..\/Par[Array].derivative.product.Sequential.dsv"}, {"scope" : ["Par[Array]", "derivative", "product"], "name" : "Par", "file" : "..\/Par[Array].derivative.product.Par.dsv"}, {"scope" : ["Par[Array]", "derivative", "count(squareMod3)"], "name" : "Sequential", "file" : "..\/Par[Array].derivative.count(squareMod3).Sequential.dsv"}, {"scope" : ["Par[Array]", "derivative", "count(squareMod3)"], "name" : "Par", "file" : "..\/Par[Array].derivative.count(squareMod3).Par.dsv"}, {"scope" : ["Par[HashMap]", "aggregate"], "name" : "Sequential", "file" : "..\/Par[HashMap].aggregate.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "aggregate"], "name" : "Par", "file" : "..\/Par[HashMap].aggregate.Par.dsv"}, {"scope" : ["Par[HashMap]", "filter"], "name" : "Sequential", "file" : "..\/Par[HashMap].filter.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "filter"], "name" : "Par", "file" : "..\/Par[HashMap].filter.Par.dsv"}, {"scope" : ["Par[HashMap]", "mapReduce"], "name" : "Sequential", "file" : "..\/Par[HashMap].mapReduce.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "mapReduce"], "name" : "Par", "file" : "..\/Par[HashMap].mapReduce.Par.dsv"}, {"scope" : ["Par[HashMap]", "find(sin)"], "name" : "Sequential", "file" : "..\/Par[HashMap].find(sin).Sequential.dsv"}, {"scope" : ["Par[HashMap]", "find(sin)"], "name" : "Par", "file" : "..\/Par[HashMap].find(sin).Par.dsv"}, {"scope" : ["Par[HashMap]", "find"], "name" : "Sequential", "file" : "..\/Par[HashMap].find.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "find"], "name" : "Par", "file" : "..\/Par[HashMap].find.Par.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "count"], "name" : "Sequential", "file" : "..\/Par[HashMap].derivative.count.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "count"], "name" : "Par", "file" : "..\/Par[HashMap].derivative.count.Par.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "foreach"], "name" : "Sequential", "file" : "..\/Par[HashMap].derivative.foreach.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "foreach"], "name" : "Par", "file" : "..\/Par[HashMap].derivative.foreach.Par.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "sum"], "name" : "Sequential", "file" : "..\/Par[HashMap].derivative.sum.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "sum"], "name" : "Par", "file" : "..\/Par[HashMap].derivative.sum.Par.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "product"], "name" : "Sequential", "file" : "..\/Par[HashMap].derivative.product.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "product"], "name" : "Par", "file" : "..\/Par[HashMap].derivative.product.Par.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "min"], "name" : "Sequential", "file" : "..\/Par[HashMap].derivative.min.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "min"], "name" : "Par", "file" : "..\/Par[HashMap].derivative.min.Par.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "max"], "name" : "Sequential", "file" : "..\/Par[HashMap].derivative.max.Sequential.dsv"}, {"scope" : ["Par[HashMap]", "derivative", "max"], "name" : "Par", "file" : "..\/Par[HashMap].derivative.max.Par.dsv"}, {"scope" : ["Reducables", "mapReduce"], "name" : "Sequential", "file" : "..\/Reducables.mapReduce.Sequential.dsv"}, {"scope" : ["Reducables", "mapReduce"], "name" : "ParRange", "file" : "..\/Reducables.mapReduce.ParRange.dsv"}, {"scope" : ["Reducables", "mapReduce"], "name" : "ParArray", "file" : "..\/Reducables.mapReduce.ParArray.dsv"}, {"scope" : ["Reducables", "mapReduce"], "name" : "ParHashSet", "file" : "..\/Reducables.mapReduce.ParHashSet.dsv"}, {"scope" : ["Reducables", "aggregate"], "name" : "Sequential", "file" : "..\/Reducables.aggregate.Sequential.dsv"}, {"scope" : ["Reducables", "aggregate"], "name" : "ParRange", "file" : "..\/Reducables.aggregate.ParRange.dsv"}, {"scope" : ["Reducables", "aggregate"], "name" : "ParArray", "file" : "..\/Reducables.aggregate.ParArray.dsv"}, {"scope" : ["Reducables", "aggregate"], "name" : "ParHashSet", "file" : "..\/Reducables.aggregate.ParHashSet.dsv"}, {"scope" : ["Reducables", "find"], "name" : "Sequential", "file" : "..\/Reducables.find.Sequential.dsv"}, {"scope" : ["Reducables", "find"], "name" : "ParRange", "file" : "..\/Reducables.find.ParRange.dsv"}, {"scope" : ["Reducables", "find"], "name" : "ParArray", "file" : "..\/Reducables.find.ParArray.dsv"}, {"scope" : ["Reducables", "find"], "name" : "ParHashSet", "file" : "..\/Reducables.find.ParHashSet.dsv"}, {"scope" : ["Reducables", "find(sin)"], "name" : "Sequential", "file" : "..\/Reducables.find(sin).Sequential.dsv"}, {"scope" : ["Reducables", "find(sin)"], "name" : "ParRange", "file" : "..\/Reducables.find(sin).ParRange.dsv"}, {"scope" : ["Reducables", "find(sin)"], "name" : "ParArray", "file" : "..\/Reducables.find(sin).ParArray.dsv"}, {"scope" : ["Reducables", "find(sin)"], "name" : "ParHashSet", "file" : "..\/Reducables.find(sin).ParHashSet.dsv"}, {"scope" : ["Reducables", "map(sqrt)"], "name" : "Sequential", "file" : "..\/Reducables.map(sqrt).Sequential.dsv"}, {"scope" : ["Reducables", "map(sqrt)"], "name" : "ParRange", "file" : "..\/Reducables.map(sqrt).ParRange.dsv"}, {"scope" : ["Reducables", "map(sqrt)"], "name" : "ParArray", "file" : "..\/Reducables.map(sqrt).ParArray.dsv"}, {"scope" : ["Reducables", "map(sqrt)"], "name" : "ParHashSets", "file" : "..\/Reducables.map(sqrt).ParHashSets.dsv"}, {"scope" : ["Reducables", "flatMap"], "name" : "Sequential", "file" : "..\/Reducables.flatMap.Sequential.dsv"}, {"scope" : ["Reducables", "flatMap"], "name" : "ParRange", "file" : "..\/Reducables.flatMap.ParRange.dsv"}, {"scope" : ["Reducables", "flatMap"], "name" : "ParArray", "file" : "..\/Reducables.flatMap.ParArray.dsv"}, {"scope" : ["Reducables", "flatMap"], "name" : "ParHashSet", "file" : "..\/Reducables.flatMap.ParHashSet.dsv"}, {"scope" : ["Reducables", "derivative", "reduce"], "name" : "Sequential", "file" : "..\/Reducables.derivative.reduce.Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "reduce"], "name" : "ParRange", "file" : "..\/Reducables.derivative.reduce.ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "reduce"], "name" : "ParArray", "file" : "..\/Reducables.derivative.reduce.ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "reduce"], "name" : "ParHashSet", "file" : "..\/Reducables.derivative.reduce.ParHashSet.dsv"}, {"scope" : ["Reducables", "derivative", "fold"], "name" : "Sequential", "file" : "..\/Reducables.derivative.fold.Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "fold"], "name" : "ParRange", "file" : "..\/Reducables.derivative.fold.ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "fold"], "name" : "ParArray", "file" : "..\/Reducables.derivative.fold.ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "fold"], "name" : "ParHashSets", "file" : "..\/Reducables.derivative.fold.ParHashSets.dsv"}, {"scope" : ["Reducables", "derivative", "filter(mod3)"], "name" : "Sequential", "file" : "..\/Reducables.derivative.filter(mod3).Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "filter(mod3)"], "name" : "ParRange", "file" : "..\/Reducables.derivative.filter(mod3).ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "filter(mod3)"], "name" : "ParArray", "file" : "..\/Reducables.derivative.filter(mod3).ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "filter(mod3)"], "name" : "ParHashSets", "file" : "..\/Reducables.derivative.filter(mod3).ParHashSets.dsv"}, {"scope" : ["Reducables", "derivative", "filter(cos)"], "name" : "Sequential", "file" : "..\/Reducables.derivative.filter(cos).Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "filter(cos)"], "name" : "ParRange", "file" : "..\/Reducables.derivative.filter(cos).ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "filter(cos)"], "name" : "ParArray", "file" : "..\/Reducables.derivative.filter(cos).ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "filter(cos)"], "name" : "ParHashSets", "file" : "..\/Reducables.derivative.filter(cos).ParHashSets.dsv"}, {"scope" : ["Reducables", "derivative", "foreach"], "name" : "Sequential", "file" : "..\/Reducables.derivative.foreach.Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "foreach"], "name" : "ParRange", "file" : "..\/Reducables.derivative.foreach.ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "foreach"], "name" : "ParArray", "file" : "..\/Reducables.derivative.foreach.ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "foreach"], "name" : "ParHashSet", "file" : "..\/Reducables.derivative.foreach.ParHashSet.dsv"}, {"scope" : ["Reducables", "derivative", "sum"], "name" : "Sequential", "file" : "..\/Reducables.derivative.sum.Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "sum"], "name" : "ParRange", "file" : "..\/Reducables.derivative.sum.ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "sum"], "name" : "ParArray", "file" : "..\/Reducables.derivative.sum.ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "sum"], "name" : "ParHashSet", "file" : "..\/Reducables.derivative.sum.ParHashSet.dsv"}, {"scope" : ["Reducables", "derivative", "product"], "name" : "Sequential", "file" : "..\/Reducables.derivative.product.Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "product"], "name" : "ParRange", "file" : "..\/Reducables.derivative.product.ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "product"], "name" : "ParArray", "file" : "..\/Reducables.derivative.product.ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "product"], "name" : "ParHashSet", "file" : "..\/Reducables.derivative.product.ParHashSet.dsv"}, {"scope" : ["Reducables", "derivative", "count(&1==0)"], "name" : "Sequential", "file" : "..\/Reducables.derivative.count(&1==0).Sequential.dsv"}, {"scope" : ["Reducables", "derivative", "count(&1==0)"], "name" : "ParRange", "file" : "..\/Reducables.derivative.count(&1==0).ParRange.dsv"}, {"scope" : ["Reducables", "derivative", "count(&1==0)"], "name" : "ParArray", "file" : "..\/Reducables.derivative.count(&1==0).ParArray.dsv"}, {"scope" : ["Reducables", "derivative", "count(&1==0)"], "name" : "ParHashSet", "file" : "..\/Reducables.derivative.count(&1==0).ParHashSet.dsv"}, {"scope" : ["Par[immutable.HashSet]", "aggregate"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].aggregate.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "aggregate"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].aggregate.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "map"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].map.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "map"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].map.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "mapReduce"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].mapReduce.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "mapReduce"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].mapReduce.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "aggregate"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].aggregate.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "aggregate"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].aggregate.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "find"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].find.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "find"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].find.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "find(sin)"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].find(sin).Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "find(sin)"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].find(sin).Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "map"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].map.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "map"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].map.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "flatMap"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].flatMap.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "flatMap"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].flatMap.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "reduce"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.reduce.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "reduce"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.reduce.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "fold"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.fold.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "fold"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.fold.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "filter(mod3)"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.filter(mod3).Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "filter(mod3)"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.filter(mod3).Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "filter(sin)"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.filter(sin).Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "filter(sin)"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.filter(sin).Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "foreach"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.foreach.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "foreach"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.foreach.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "sum"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.sum.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "sum"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.sum.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "product"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.product.Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "product"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.product.Par.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "count(&1==0)"], "name" : "Sequential", "file" : "..\/Par[immutable.HashSet].derivative.count(&1==0).Sequential.dsv"}, {"scope" : ["Par[immutable.HashSet]", "derivative", "count(&1==0)"], "name" : "Par", "file" : "..\/Par[immutable.HashSet].derivative.count(&1==0).Par.dsv"}];
  parent[my.name] = my;
  return parent;
})(ScalaMeter || {});
